<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="$(ProjectDir)\..\GxHelper\GxHelper\Lib\MySql.Data.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="System.Web.dll" #>
<#@ assembly name="System.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>

<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Web" #>
<#@ import namespace="MySql.Data.MySqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>

<#+
	string sql = "Data Source=localhost;Database=GxPlatform;user id=root;password=1234;Charset=gb2312";
#>
<#+
	public List<SqlTable> GetSqlTableList()
	{
        DataTable dt = GetDataSet().Tables[0];
        List<SqlTable> stl = BindTable(dt);
        return BindColumn(dt, stl);
	}
    public DataSet GetDataSet()
    {
        DataSet ds = new DataSet();
        MySqlConnection con = new MySqlConnection(sql);
        sql = "SELECT " +
        "TABLE_NAME, " +//表名
        "COLUMN_NAME, " +//列名
        "DATA_TYPE, " +//列类型
        "COLUMN_COMMENT SUMMARY " +//列备注
        "FROM " +
        "information_schema.columns " +
        "where table_schema = 'gxplatform' ";
        MySqlCommand cmd = new MySqlCommand(sql, con);
        MySqlDataAdapter adapter = new MySqlDataAdapter();
        adapter.SelectCommand = cmd;
        adapter.Fill(ds);
        return ds;
    }
    public List<SqlTable> BindTable(DataTable dt)
    {
        List<SqlTable> st = new List<SqlTable>();
        var list= dt.AsEnumerable().Select(x => x["TABLE_NAME"].ToString()).Distinct();
        foreach(var item in list)
        {
            SqlTable nst = new SqlTable();
            nst.Name = item;
            st.Add(nst);
        }
        return st;
    }
    public List<SqlTable> BindColumn(DataTable dt, List<SqlTable> lst)
    {
        foreach(SqlTable st_item in lst)
        {
            var drs = dt.AsEnumerable().Where(x=>x["TABLE_NAME"].ToString()== st_item.Name);
            var list = from item in drs select new SqlColumn() {
                Name= item["COLUMN_NAME"].ToString(),
                DateType = item["DATA_TYPE"].ToString(),
                Summary= item["SUMMARY"].ToString()
            };
            st_item.Columns.AddRange(list);
        }
        return lst;
    }
	/*public string Get_Insert(List<SqlColumn> lsc,string c=",")
    {
		string str="";
		foreach(SqlColumn item in lsc)
        {
			if(item.Name!="id")
            {
				str+=c+item.Name;
            }
        }
		return str.Substring(1);
    }*/
#>
<#+ 
	public class SqlTable
    {
        public string Name { get; set; }
        public List<SqlColumn> Columns { get; set; }
        public SqlTable()
        {
            Columns = new List<SqlColumn>();
        }
    }
    public class SqlColumn
    {
        public string Name { get; set; }
		string _DateType;
        public string DateType {
			get{
				return _DateType;
			}
			set{
				switch(value)
                {
                    case "bigint": _DateType = "long"; break;
                    case "binary": _DateType = "byte[]"; break;
                    case "bit": _DateType = "bool?"; break;
                    case "char": _DateType = "string"; break;
                    case "date": _DateType = "DateTime?"; break;
                    case "datetime": _DateType = "DateTime?"; break;
                    case "datetime2": _DateType = "DateTime?"; break;
                    case "datetimeoffset": _DateType = "DateTimeOffset"; break;
                    case "decimal": _DateType = "decimal?"; break;
                    case "float": _DateType = "double"; break;
                    case "image": _DateType = "byte[]"; break;
                    case "int": _DateType = "int?"; break;
                    case "money": _DateType = "decimal?"; break;
                    case "nchar": _DateType = "string"; break;
                    case "ntext": _DateType = "string"; break;
                    case "longtext": _DateType = "string"; break;
                    case "numeric": _DateType = "decimal?"; break;
                    case "nvarchar": _DateType = "string"; break;
                    case "real": _DateType = "Single"; break;
                    case "smalldatetime": _DateType = "DateTime?"; break;
                    case "smallint": _DateType = "short"; break;
                    case "smallmoney": _DateType = "decimal?"; break;
                    case "sql_variant": _DateType = "object"; break;
                    case "sysname": _DateType = "object"; break;
                    case "text": _DateType = "string"; break;
                    case "time": _DateType = "TimeSpan"; break;
                    case "timestamp": _DateType = "byte[]"; break;
                    case "tinyint": _DateType = "byte"; break;
                    case "uniqueidentifier": _DateType = "Guid"; break;
                    case "varbinary": _DateType = "byte[]"; break;
                    case "varchar": _DateType = "string"; break;
                    case "xml": _DateType = "string"; break;
					default:_DateType="object";break;
                }
			}
		}
		public string Summary{ get; set; }
    }
#>